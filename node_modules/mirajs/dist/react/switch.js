"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var Switch = /*
*  Switch :
*   props : {
*       color ('primary'/'danger': default=>'primary') // For color.
*       disable (true/false: default=> false) // To indicated the state activity.
*       checked (true/false: default=> false) // To indicated the switch situation.
* */ /*#__PURE__*/ function(_Component) {
    "use strict";
    _inherits(Switch, _Component);
    var _super = _createSuper(Switch);
    function Switch(props) {
        _classCallCheck(this, Switch);
        var _this;
        _this = _super.call(this, props);
        _defineProperty(_assertThisInitialized(_this), "setRipple", function() {
            var element = _this.myRipple.current;
            element.animate([
                {
                    opacity: 1,
                    transform: 'scale(0.5)'
                },
                {
                    opacity: 0,
                    transform: 'scale(1.1)'
                }
            ], {
                duration: 500
            });
        });
        _defineProperty(_assertThisInitialized(_this), "handleClick", function() {
            if (!_this.state.disabled) {
                _this.setState(function(state) {
                    return {
                        checked: !state.checked
                    };
                });
                _this.setRipple();
                if (_this.props.onValueChange !== undefined) _this.props.onValueChange(_this.state.checked);
            }
        });
        _this.myRipple = /*#__PURE__*/ _react.default.createRef();
        _this.state = {
            checked: _this.props.checked,
            disabled: _this.props.disabled
        };
        return _this;
    }
    _createClass(Switch, [
        {
            key: "render",
            value: function render() {
                var _this = this;
                return(/*#__PURE__*/ _react.default.createElement("span", {
                    onClick: function() {
                        return _this.handleClick();
                    },
                    className: "dc-switch-root " + (this.state.disabled ? '' : 'dc-switchHover')
                }, /*#__PURE__*/ _react.default.createElement("span", {
                    className: "dc-switch-stateRoot " + (this.state.checked ? 'dc-switch-on' : 'dc-switch-off')
                }, /*#__PURE__*/ _react.default.createElement("span", {
                    className: "dc-switch-state " + (this.state.checked && !this.state.disabled ? 'dc-switch-state-' + this.props.color : '') + "\n                        " + (this.state.disabled ? 'dc-switch-state-disabled' : 'dc-switch-stateHover')
                }, " "), /*#__PURE__*/ _react.default.createElement("span", {
                    ref: this.myRipple,
                    className: "dc-switch-state-ripple " + (this.state.checked ? 'dc-switch-state-ripple-' + this.props.color : '')
                }, " ")), /*#__PURE__*/ _react.default.createElement("span", {
                    className: "dc-switch-track " + (this.state.checked && !this.state.disabled ? 'dc-switch-track-' + this.props.color : '') + "\n               " + (this.state.disabled ? 'dc-switch-track-disabled' : '')
                }, " ")));
            }
        }
    ]);
    return Switch;
}(_react.default.Component);
Switch.propTypes = {
    color: _propTypes.default.oneOf([
        'primary',
        'danger'
    ]),
    checked: _propTypes.default.bool,
    disable: _propTypes.default.bool
};
Switch.defaultProps = {
    color: "primary",
    disable: false,
    checked: false
};
var _default = Switch;
exports.default = _default;
