"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _component = _interopRequireDefault(require("../classes/component"));
var _lang = _interopRequireDefault(require("./lang"));
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var DComponent = /*#__PURE__*/ function(_Component) {
    "use strict";
    _inherits(DComponent, _Component);
    var _super = _createSuper(DComponent);
    function DComponent(props) {
        _classCallCheck(this, DComponent);
        var _this;
        _this = _super.call(this, props);
        _this.state = {
            object: null,
            type: props.type,
            lang: "fr",
            ready: false
        };
        return _this;
    }
    _createClass(DComponent, [
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this = this;
                this.setState({
                    /**
             * @type {Component}
             */ objet: new _component.default(this.props.code)
                }, function() {
                    var _this1 = _this;
                    _this.setState({
                        ready: true
                    }, function() {
                        if (_this1.props.onReady) _this1.props.onReady();
                    });
                });
            }
        },
        {
            key: "render",
            value: function render() {
                if (this.state.ready) {
                    var children = this.props.children;
                    var state = this.state.objet.state;
                    state = this.props.state !== undefined ? this.props.state : state;
                    children = _react.default.Children.toArray(children)[0];
                    console.log('Children : ', children);
                    if (state) {
                        if (state === 1) {
                            var Tab = _react.default.Children.toArray(children.props.children);
                            //Tab.push(React.createElement("button", {className: "dcx-btn"}, "My Button"));
                            var Element = /*#__PURE__*/ _react.default.cloneElement(children, _extends({}, children.props, {
                                className: "dcomponent " + children.props.className
                            }), Tab);
                            return(/*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, Element));
                        } else {
                            var Tab1 = _react.default.Children.toArray(children.props.children), classe = "dcomponent " + children.props.className, Element1 = undefined, props = _extends({}, children.props, {
                                className: classe,
                                title: _lang.default.component.disabled[this.state.lang]
                            });
                            switch(this.state.type){
                                case "button":
                                    Tab1.push(/*#__PURE__*/ _react.default.createElement("div", {
                                        className: "dcomponent__disabled"
                                    }, ""));
                                    classe = "dcomponent " + children.props.className + " disabled";
                                    props.onClick = function() {
                                        return false;
                                    };
                                    props.className = classe;
                                    Element1 = /*#__PURE__*/ _react.default.cloneElement(children, props, Tab1);
                                    break;
                                case "input":
                                    Tab1.push(/*#__PURE__*/ _react.default.createElement("div", {
                                        className: "dcomponent__disabled"
                                    }, ""));
                                    props.inputProps = {
                                        disabled: true
                                    };
                                    Element1 = /*#__PURE__*/ _react.default.cloneElement(children, props, Tab1);
                                    break;
                                case "container":
                                    var elem = /*#__PURE__*/ _react.default.cloneElement(children, _extends({}, children.props), Tab1);
                                    Element1 = /*#__PURE__*/ _react.default.createElement("span", {
                                        className: "dcomponent"
                                    }, elem, /*#__PURE__*/ _react.default.createElement("div", {
                                        className: "dcomponent__disabled"
                                    }, " "));
                                    break;
                                default:
                                    Tab1.push(/*#__PURE__*/ _react.default.createElement("div", {
                                        className: "dcomponent__disabled"
                                    }, ""));
                                    props.onClick = function() {
                                        return false;
                                    };
                                    Element1 = /*#__PURE__*/ _react.default.cloneElement(children, props, Tab1);
                                    break;
                            }
                            return(/*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, " ", Element1, " "));
                        }
                    } else {
                        return(/*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null));
                    }
                } else return(/*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null));
            }
        }
    ]);
    return DComponent;
}(_react.default.Component);
exports.default = DComponent;
DComponent.propTypes = {
    code: _propTypes.default.instanceOf(_component.default),
    type: _propTypes.default.oneOf([
        "default",
        "button",
        "input",
        "container"
    ]),
    onReady: _propTypes.default.func
};
DComponent.defaultProps = {
    code: "",
    type: "default",
    onReady: undefined
};
