"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LinearPreloader = exports.CircularPreloader = void 0;
var _react = _interopRequireDefault(require("react"));
var _js = require("../js");
var _propTypes = _interopRequireDefault(require("prop-types"));
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var CircularPreloader = /*#__PURE__*/ function(_Component) {
    "use strict";
    _inherits(CircularPreloader, _Component);
    var _super = _createSuper(CircularPreloader);
    function CircularPreloader(props) {
        _classCallCheck(this, CircularPreloader);
        var _this;
        _this = _super.call(this, props);
        _defineProperty(_assertThisInitialized(_this), "classe", "dcx-preloader dcx-preloader__circular");
        _this.state = {
            visible: _js.DCutilities.isDefined(props.visible, false),
            determinate: _js.DCutilities.isDefined(props.determinate, false),
            value: 0,
            classe: _this.classe,
            ready: false,
            withLabel: false
        };
        return _this;
    }
    _createClass(CircularPreloader, [
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                this.getReady();
            }
        },
        {
            key: "getReady",
            value: function getReady() {
                var _props = this.props, size = _props.size, color = _props.color;
                size = _js.DCutilities.isDefined(size, "");
                color = _js.DCutilities.isDefined(color, "");
                var sizeClasse = "", colorClasse = "";
                if (size.trim() === "small") sizeClasse = "__size-small";
                else if (size.trim() === "big") sizeClasse = "__size-big";
                switch(color){
                    case 'red':
                        colorClasse = "__color-red";
                        break;
                    case 'green':
                        colorClasse = "__color-green";
                        break;
                    case 'fade':
                        colorClasse = "__color-fade";
                        break;
                    default:
                        break;
                }
                var determinate = this.state.determinate ? "__determinate" : "__indeterminate";
                this.setState({
                    classe: this.state.classe + " " + determinate + " " + colorClasse + " " + sizeClasse,
                    ready: true
                });
            }
        },
        {
            key: "show",
            value: function show() {
                this.setState({
                    visible: true
                });
            }
        },
        {
            key: "hide",
            value: function hide() {
                this.setState({
                    visible: false
                });
            }
        },
        {
            key: "toggle",
            value: function toggle() {
                this.setState({
                    visible: !this.state.visible
                });
            }
        },
        {
            key: "setIndicator",
            value: function setIndicator() {
                var value = this.props.value;
                return 126.92 - value * 126.92 / 100;
            }
        },
        {
            key: "render",
            value: function render() {
                var className = this.props.className;
                className = _js.DCutilities.isDefined(className, "");
                if (this.state.visible && this.state.ready) {
                    return(/*#__PURE__*/ _react.default.createElement("span", _extends({}, this.props, {
                        className: this.state.classe + " " + className,
                        "aria-valuenow": this.props.value,
                        role: "progressbar"
                    }), this.state.determinate ? /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement("svg", {
                        className: "dcx-preloader__svg",
                        viewBox: "22 22 44 44"
                    }, /*#__PURE__*/ _react.default.createElement("circle", {
                        className: "dcx-preloader__circle __determinate",
                        cx: "44",
                        cy: "44",
                        r: "20.2",
                        fill: "none",
                        strokeWidth: 3.6,
                        style: {
                            strokeDasharray: "126.92",
                            strokeDashoffset: this.setIndicator() + "px"
                        }
                    })), /*#__PURE__*/ _react.default.createElement("div", {
                        className: "dcx-preloader__label"
                    }, /*#__PURE__*/ _react.default.createElement("span", null, this.props.value, "%"))) : /*#__PURE__*/ _react.default.createElement("svg", {
                        className: "dcx-preloader__svg",
                        viewBox: "22 22 44 44"
                    }, /*#__PURE__*/ _react.default.createElement("circle", {
                        className: "dcx-preloader__circle __indeterminate",
                        cx: "44",
                        cy: "44",
                        r: "20.2",
                        fill: "none",
                        strokeWidth: 3.6
                    }))));
                } else {
                    return(/*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null));
                }
            }
        }
    ]);
    return CircularPreloader;
}(_react.default.Component);
CircularPreloader.defaultProps = {
    visible: false,
    determinate: false,
    value: 0,
    size: "medium",
    color: "default",
    withLabel: false
};
CircularPreloader.propTypes = {
    visible: _propTypes.default.bool,
    determinate: _propTypes.default.bool,
    value: _propTypes.default.number,
    size: _propTypes.default.oneOf([
        "small",
        "medium",
        "big"
    ]),
    color: _propTypes.default.oneOf([
        "red",
        "green",
        "default",
        "fade"
    ]),
    withLabel: _propTypes.default.bool
};
var LinearPreloader = /*#__PURE__*/ function(_Component) {
    "use strict";
    _inherits(LinearPreloader, _Component);
    var _super = _createSuper(LinearPreloader);
    function LinearPreloader(props) {
        _classCallCheck(this, LinearPreloader);
        var _this;
        _this = _super.call(this, props);
        _defineProperty(_assertThisInitialized(_this), "classe", "dcx-preloader dcx-preloader__linear");
        _this.state = {
            ready: false,
            visible: _js.DCutilities.isDefined(props.visible, false),
            value: _js.DCutilities.isDefined(props.value, 0),
            classe: _this.classe,
            determinate: _js.DCutilities.isDefined(props.determinate, false),
            page: _js.DCutilities.isDefined(props.page, false)
        };
        return _this;
    }
    _createClass(LinearPreloader, [
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                var color = this.props.color;
                var colorClasse = "";
                switch(color){
                    case 'red':
                        colorClasse = "__color-red";
                        break;
                    case 'green':
                        colorClasse = "__color-green";
                        break;
                    case 'fade':
                        colorClasse = "__color-fade";
                        break;
                    case 'blue':
                        colorClasse = "__color-blue";
                        break;
                    default:
                        break;
                }
                var determinate = this.state.determinate ? "__determinate" : "__indeterminate";
                var page = this.state.page ? "__page" : "";
                this.setState({
                    classe: this.state.classe + " " + determinate + " " + colorClasse + " " + page,
                    ready: true
                });
            }
        },
        {
            key: "show",
            value: function show() {
                this.setState({
                    visible: true
                });
            }
        },
        {
            key: "hide",
            value: function hide() {
                this.setState({
                    visible: false
                });
            }
        },
        {
            key: "toggle",
            value: function toggle() {
                this.setState({
                    visible: !this.state.visible
                });
            }
        },
        {
            key: "setIndicator",
            value: function setIndicator() {
                var value = this.props.value;
                return value;
            }
        },
        {
            key: "render",
            value: function render() {
                var className = this.props.className;
                className = _js.DCutilities.isDefined(className, "");
                if (this.state.visible && this.state.ready) {
                    return(/*#__PURE__*/ _react.default.createElement("div", _extends({}, this.props, {
                        className: this.state.classe + " " + className,
                        "aria-valuenow": this.props.value,
                        role: "progressbar"
                    }), this.state.determinate ? /*#__PURE__*/ _react.default.createElement("div", {
                        className: "__determinate",
                        style: {
                            width: this.setIndicator() + "%"
                        }
                    }) : /*#__PURE__*/ _react.default.createElement("div", {
                        className: "__indeterminate"
                    })));
                } else return(/*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null));
            }
        }
    ]);
    return LinearPreloader;
}(_react.default.Component);
LinearPreloader.defaultProps = {
    visible: false,
    determinate: false,
    value: 0,
    color: "default",
    withLabel: false,
    page: false
};
LinearPreloader.propTypes = {
    visible: _propTypes.default.bool,
    determinate: _propTypes.default.bool,
    value: _propTypes.default.number,
    color: _propTypes.default.oneOf([
        "red",
        "green",
        "default",
        "fade",
        "blue"
    ]),
    withLabel: _propTypes.default.bool,
    page: _propTypes.default.bool
};
exports.CircularPreloader = CircularPreloader;
exports.LinearPreloader = LinearPreloader;
