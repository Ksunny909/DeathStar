"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _form = require("./form");
var _optionsPopup = require("./options_popup");
var _divider = _interopRequireDefault(require("./divider"));
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var __Criteres = [
    {
        title: "Pays",
        value: "pays",
        indicator: "P",
        tab: [
            {
                title: "Cameroun",
                value: "CM"
            },
            {
                title: "France",
                value: "FR"
            },
            {
                title: "United States",
                value: "USA"
            }, 
        ]
    },
    {
        title: "\xc2ge",
        value: "age",
        indicator: "\xc2",
        tab: [
            {
                title: "18 - 24 ans",
                value: "18-24"
            },
            {
                title: "25 - 35 ans",
                value: "25-35"
            },
            {
                title: "36 - 40 ans",
                value: "36-40"
            }, 
        ]
    }
], __Lang = {
    btn: "Ajouter un crit\xe8re",
    titleOptions: "Param\xe8tres du crit\xe8re",
    labelVariable: "S\xe9lectionner une variable",
    labelValeur: "S\xe9lectionner une valeur",
    btnSubmit: "Ajouter"
};
var FilterItem = function(param) {
    var indicator = param.indicator, title = param.title, onClose = param.onClose;
    return(/*#__PURE__*/ _react.default.createElement("div", {
        className: "dcx-btn__options __div"
    }, /*#__PURE__*/ _react.default.createElement("span", {
        className: "__ind"
    }, indicator), /*#__PURE__*/ _react.default.createElement("span", {
        className: "__title",
        title: title
    }, title), /*#__PURE__*/ _react.default.createElement("span", {
        className: "__icon",
        onClick: function() {
            if (onClose) onClose();
        }
    }, /*#__PURE__*/ _react.default.createElement("i", {
        className: "DGfi-clearclose"
    }))));
};
var FilterClass = /*#__PURE__*/ function(_Component) {
    "use strict";
    _inherits(FilterClass, _Component);
    var _super = _createSuper(FilterClass);
    function FilterClass(props) {
        _classCallCheck(this, FilterClass);
        var _this;
        _this = _super.call(this, props);
        _defineProperty(_assertThisInitialized(_this), "buttonRef", /*#__PURE__*/ _react.default.createRef());
        _defineProperty(_assertThisInitialized(_this), "optionsRef", /*#__PURE__*/ _react.default.createRef());
        _this.state = {
            filters: [],
            filterVariable: "",
            value: ""
        };
        return _this;
    }
    _createClass(FilterClass, [
        {
            key: "onCloseItem",
            value: function onCloseItem(_index) {
                var _this = this;
                var filters = this.state.filters;
                filters.splice(_index, 1);
                this.setState({
                    filters: filters
                }, function() {
                    if (_this.props.onCloseItem) _this.props.onCloseItem();
                });
                this.positionOptions();
            }
        },
        {
            key: "getTabValues",
            value: function getTabValues() {
                console.log("[MiraJs] Getting filter Tab...");
                var filterVariable = this.state.filterVariable, criteres = this.props.criteres, indice = criteres.findIndex(function(item) {
                    return item.value === filterVariable;
                });
                if (indice > -1) {
                    return criteres[indice].tab;
                }
                return [];
            }
        },
        {
            key: "addFilter",
            value: function addFilter() {
                var _this = this;
                var ref;
                var _state = this.state, filterVariable = _state.filterVariable, filters = _state.filters, value = _state.value, criteres = this.props.criteres, filterObj = null, indice = criteres.findIndex(function(item) {
                    return item.value === filterVariable;
                });
                if (indice > -1) {
                    var ind = criteres[indice].tab.findIndex(function(item) {
                        return item.value === value;
                    });
                    filterObj = {
                        critere: criteres[indice].value,
                        title: criteres[indice].title + " : " + criteres[indice].tab[ind].title,
                        value: value,
                        indicator: criteres[indice].indicator
                    };
                    filters.push(filterObj);
                }
                (ref = this.optionsRef.current) == null ? void 0 : ref.close();
                this.setState({
                    filters: filters,
                    value: ""
                }, function() {
                    if (_this.props.onAddFilter) _this.props.onAddFilter(filterObj);
                });
            }
        },
        {
            key: "positionOptions",
            value: function positionOptions() {
                var ref, ref1;
                (ref = this.optionsRef) == null ? void 0 : ref.current.setInitPosition((ref1 = this.buttonRef) == null ? void 0 : ref1.current, {
                    width: 300,
                    height: 300
                });
            }
        },
        {
            key: "getFilter",
            value: function getFilter() {
                return this.state.filters;
            }
        },
        {
            key: "render",
            value: function render() {
                var _this = this;
                var filters = this.state.filters, _props = this.props, lang = _props.lang, criteres = _props.criteres;
                return(/*#__PURE__*/ _react.default.createElement("div", _extends({}, this.props, {
                    className: "m_filter " + (this.props.className ? this.props.className : ""),
                    onMouseEnter: function() {
                        return _this.positionOptions();
                    }
                }), /*#__PURE__*/ _react.default.createElement("div", {
                    className: "__items"
                }, filters.map(function(item, index) {
                    /*#__PURE__*/ return _react.default.createElement(FilterItem, {
                        key: index,
                        title: item.title,
                        indicator: item.indicator,
                        onClose: function() {
                            return _this.onCloseItem(index);
                        }
                    });
                })), /*#__PURE__*/ _react.default.createElement("button", {
                    ref: this.buttonRef,
                    className: "dcx-btn__options",
                    onClick: function() {
                        var ref;
                        return (ref = _this.optionsRef.current) == null ? void 0 : ref.show();
                    }
                }, /*#__PURE__*/ _react.default.createElement("span", {
                    className: "__title"
                }, lang.btn), /*#__PURE__*/ _react.default.createElement("span", {
                    className: "__icon"
                }, /*#__PURE__*/ _react.default.createElement("i", {
                    className: "DGfi-add"
                }))), /*#__PURE__*/ _react.default.createElement(_optionsPopup.OptionsPopup, {
                    ref: this.optionsRef,
                    className: "__op-popup"
                }, /*#__PURE__*/ _react.default.createElement("div", {
                    className: "op__head"
                }, lang.titleOptions), /*#__PURE__*/ _react.default.createElement(_divider.default, null), /*#__PURE__*/ _react.default.createElement("div", {
                    className: "op__content"
                }, /*#__PURE__*/ _react.default.createElement(_form.Select, {
                    label: lang.labelVariable,
                    value: this.state.filterVariable,
                    onValueChange: function(_value) {
                        return _this.setState({
                            filterVariable: _value
                        });
                    },
                    className: "alone",
                    mode: "outlined",
                    size: "small"
                }, criteres.map(function(item, index) {
                    /*#__PURE__*/ return _react.default.createElement("option", {
                        key: index,
                        value: item.value
                    }, item.title);
                })), this.state.filterVariable !== "" ? /*#__PURE__*/ _react.default.createElement(_form.Select, {
                    label: lang.labelValeur,
                    value: this.state.value,
                    className: "alone",
                    mode: "outlined",
                    onValueChange: function(_value) {
                        _this.setState({
                            value: _value,
                            filters: filters
                        });
                    },
                    size: "small"
                }, this.getTabValues().map(function(item, index) {
                    /*#__PURE__*/ return _react.default.createElement("option", {
                        key: index,
                        value: item.value
                    }, item.title);
                })) : /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null), this.state.value !== "" ? /*#__PURE__*/ _react.default.createElement(_form.Bouton, {
                    title: lang.btnSubmit,
                    onClick: function() {
                        return _this.addFilter();
                    }
                }) : /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null)))));
            }
        }
    ]);
    return FilterClass;
}(_react.default.Component);
_defineProperty(FilterClass, "propTypes", {
    lang: _propTypes.default.object,
    criteres: _propTypes.default.array,
    onAddFilter: _propTypes.default.func,
    onCloseItem: _propTypes.default.func
});
_defineProperty(FilterClass, "defaultProps", {
    lang: __Lang,
    criteres: __Criteres
});
exports.default = FilterClass;
