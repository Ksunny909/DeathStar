"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Alert = exports.AlertTitle = exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}
var Alert = /*#__PURE__*/ function(_Component) {
    "use strict";
    _inherits(Alert, _Component);
    var _super = _createSuper(Alert);
    function Alert(props) {
        _classCallCheck(this, Alert);
        var _this;
        _this = _super.call(this, props);
        _this.state = {
            show: true
        };
        return _this;
    }
    _createClass(Alert, [
        {
            /**
     * Fonction qui initailise le les classes.
     * @returns {string}
     */ key: "buildClassName",
            value: function buildClassName() {
                var className;
                if (this.props.severity === 'error') className = 'dcx-alert-error';
                else if (this.props.severity === 'warning') className = 'dcx-alert-warning';
                else if (this.props.severity === 'success') className = 'dcx-alert-success';
                else if (this.props.severity === 'info') className = 'dcx-alert-info';
                if (this.props.variant !== undefined && this.props.variant === 'outlined') className += ' outlined ';
                if (this.props.variant !== undefined && this.props.variant === 'filled') className += ' filled ';
                return className;
            }
        },
        {
            /**
     * Fonction qui initialis l'icon correspondant.
     * @returns {HTMLElement}
     */ key: "buildIconType",
            value: function buildIconType() {
                var icon;
                if (this.props.severity === 'error') icon = /*#__PURE__*/ _react.default.createElement("svg", {
                    className: "dcx-alert-icon dcx-alert-icon-error",
                    focusable: false,
                    viewBox: "0 0 24 24",
                    "aria-hidden": "true"
                }, /*#__PURE__*/ _react.default.createElement("path", {
                    d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                }));
                else if (this.props.severity === 'warning') icon = /*#__PURE__*/ _react.default.createElement("svg", {
                    className: "dcx-alert-icon dcx-alert-icon-warning",
                    focusable: false,
                    viewBox: "0 0 24 24",
                    "aria-hidden": "true"
                }, /*#__PURE__*/ _react.default.createElement("path", {
                    d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
                }));
                else if (this.props.severity === 'success') icon = /*#__PURE__*/ _react.default.createElement("svg", {
                    className: "dcx-alert-icon dcx-alert-icon-success",
                    focusable: false,
                    viewBox: "0 0 24 24",
                    "aria-hidden": "true"
                }, /*#__PURE__*/ _react.default.createElement("path", {
                    d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
                }));
                else if (this.props.severity === 'info') icon = /*#__PURE__*/ _react.default.createElement("svg", {
                    className: "dcx-alert-icon dcx-alert-icon-info",
                    focusable: false,
                    viewBox: "0 0 24 24",
                    "aria-hidden": "true"
                }, /*#__PURE__*/ _react.default.createElement("path", {
                    d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
                }));
                return(/*#__PURE__*/ _react.default.createElement("span", {
                    className: "dcx-alert-icon-indicator"
                }, icon));
            }
        },
        {
            /**
     * Fonction qui initialise les boutons d'action
     * @returns {HTMLElement}
     */ key: "buildAction",
            value: function buildAction() {
                var _this = this;
                if (this.props.onClose) return(/*#__PURE__*/ _react.default.createElement("button", {
                    className: "dcx-alert-action dcx-alert-btn dcx-alert-btn-icon",
                    onClick: function() {
                        _this.setState(function(state) {
                            return {
                                show: !state
                            };
                        });
                    }
                }, /*#__PURE__*/ _react.default.createElement("svg", {
                    className: "dcx-alert-icon",
                    focusable: false,
                    viewBox: "0 0 24 24",
                    "aria-hidden": "true"
                }, /*#__PURE__*/ _react.default.createElement("path", {
                    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                }))));
                else if (this.props.action === undefined) return(/*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null));
                else return(/*#__PURE__*/ _react.default.createElement("button", {
                    className: "dcx-alert-action dcx-alert-btn",
                    onClick: function() {
                        return _this.props.action.listener();
                    }
                }, this.props.action.text));
            }
        },
        {
            /**
     * La fonction render.
     * @returns {JSXElement}
     */ key: "render",
            value: function render() {
                return(/*#__PURE__*/ _react.default.createElement("div", {
                    className: "dcx-alert " + this.buildClassName() + " " + (!this.state.show ? 'hide' : '')
                }, this.buildIconType(), /*#__PURE__*/ _react.default.createElement("div", null, this.props.children), this.buildAction()));
            }
        }
    ]);
    return Alert;
}(_react.default.Component);
exports.default = Alert;
/**
 * Propriétés des props.
 * @type {{severity: *, onClose: bool, variant: *, action: *}}
 */ Alert.propTypes = {
    severity: _propTypes.default.oneOf([
        'info',
        'success',
        'error',
        'warning'
    ]),
    onClose: _propTypes.default.bool,
    action: _propTypes.default.object,
    variant: _propTypes.default.oneOf([
        'outlined',
        'filled'
    ])
};
/**
 * Valeurs par defaut des props.
 * @type {{severity: string, onClose: boolean, variant: string, action: object}}
 */ Alert.defaultProps = {
    severity: 'info',
    onClose: false,
    action: undefined,
    variant: undefined
};
/**
 * Fonction qui permet d'indiquer le titre d'une alert.
 * @param props
 * @returns {JSXElement}
 * @constructor
 */ var AlertTitle = function(props) {
    return(/*#__PURE__*/ _react.default.createElement("div", {
        className: "dcx-alert-title"
    }, props.children));
};
exports.AlertTitle = AlertTitle;
exports.Alert = Alert;
