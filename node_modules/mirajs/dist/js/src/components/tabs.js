"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _coding = _interopRequireDefault(require("../coding"));
var _animation = _interopRequireDefault(require("./animation"));
var _utilitaires = _interopRequireDefault(require("../utilitaires"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/**
 * @param _selector string
 * @param _options {{swipeable: boolean, horizontal: boolean}}
 * @returns: nothing
 */ var Tabs = function(_selector, _options) {
    var __current_tab = null, __time_slide_tab = 300, __start_reading = false, __prev_x = 0, __diff_x = 0, len = 0, selctor_tab = [], divs = [], tabs, tabsTitle, __last_x, __prev_y, __last_y, __counter = 0;
    var worker = function(_id_tab) {
        var _loop = function(i1) {
            divs[i1] = _coding.default.get(selctor_tab[i1].id);
            _coding.default.css(selctor_tab[i1].id, {
                transition: "0s all"
            });
            _coding.default.hide(divs[i1]);
            if (selctor_tab[i1].active) {
                _coding.default.show(divs[i1]);
                _coding.default.css(divs[i1], {
                    display: "inline-block"
                });
                __current_tab = {
                    obj: divs[i1],
                    id: i1
                };
            }
            if (tabsTitle[i1].className.indexOf("disabled") === -1) {
                tabsTitle[i1].onclick = function(e) {
                    e.preventDefault();
                    for(var k = 0; k < len; k++){
                        _coding.default.removeClass(tabsTitle[k], [
                            "notactive",
                            "not",
                            "active"
                        ]);
                        _coding.default.addClass(tabsTitle[k], "notactive");
                        _coding.default.removeClass(divs[k], [
                            "notactive",
                            "not",
                            "active"
                        ]);
                        _coding.default.addClass(divs[k], "notactive");
                    }
                    _coding.default.addClass(tabsTitle[i1], "active");
                    _coding.default.addClass(divs[i1], "active");
                    if (__current_tab !== null && divs[i1].id !== __current_tab.obj.id) slider(divs[i1], i1);
                    else _coding.default.show(divs[i1]);
                };
            }
            if (_options !== undefined && _options.swipeable || _options === undefined) {
                if (_utilitaires.default.isTouchScreen()) {
                    divs[i1].ontouchstart = function(e) {
                        __start_reading = true;
                        __prev_x = e.touches[0].clientX;
                        __prev_y = e.touches[0].clientY;
                    //console.log(e);
                    };
                    divs[0].parentNode.ontouchmove = function(e) {
                        if (__start_reading) {
                            if (__prev_x < e.touches[0].clientX && __current_tab.id > 0) {
                                __counter++;
                                var diff = e.touches[0].clientX - __prev_x, prev = divs[__current_tab.id - 1];
                                _coding.default.show(prev);
                                diff *= 0.75;
                                __diff_x = -1 * diff;
                                __last_x = e.touches[0].clientX;
                                __last_y = e.touches[0].clientY;
                                if (diff < prev.offsetWidth / 2) {
                                    _coding.default.css(__current_tab.obj, {
                                        left: diff + "px"
                                    });
                                    var left = -1 * (prev.offsetWidth - diff);
                                    _coding.default.css(prev, {
                                        left: left + "px"
                                    });
                                } else {
                                    setActiveTab(__current_tab.id - 1);
                                    slider(prev, __current_tab.id - 1);
                                    __start_reading = false;
                                }
                            } else if (__prev_x > e.touches[0].clientX && __current_tab.id < divs.length - 1) {
                                var diff1 = __prev_x - e.touches[0].clientX, next = divs[__current_tab.id + 1];
                                _coding.default.show(next);
                                diff1 *= 0.75;
                                __diff_x = diff1;
                                if (diff1 < next.offsetWidth / 2) {
                                    _coding.default.css(__current_tab.obj, {
                                        left: -1 * diff1 + "px"
                                    });
                                    var left1 = next.offsetWidth - diff1;
                                    _coding.default.css(next, {
                                        left: left1 + "px"
                                    });
                                } else {
                                    setActiveTab(__current_tab.id + 1);
                                    slider(next, __current_tab.id + 1);
                                    __start_reading = false;
                                }
                            }
                        }
                    };
                    divs[i1].ontouchend = function(e) {
                        __start_reading = false;
                        var elem = e.currentTarget;
                        if (__diff_x > 0 && __diff_x <= elem.offsetWidth / 2) {
                            (0, _animation).default({
                                type: "left",
                                object: elem,
                                value: 0,
                                time: __time_slide_tab
                            });
                            (0, _animation).default({
                                type: "left",
                                object: divs[i1 + 1],
                                value: elem.offsetWidth,
                                time: __time_slide_tab
                            });
                        } else if (__diff_x < 0 && __diff_x * -1 <= elem.offsetWidth / 2) {
                            (0, _animation).default({
                                type: "left",
                                object: elem,
                                value: 0,
                                time: __time_slide_tab
                            });
                            (0, _animation).default({
                                type: "left",
                                object: divs[i1 - 1],
                                value: -1 * elem.offsetWidth,
                                time: __time_slide_tab
                            });
                        }
                    };
                } else {
                    divs[i1].onmousedown = function(e) {
                        __start_reading = true;
                        __prev_x = e.clientX;
                    };
                    divs[0].parentNode.onmousemove = function(e) {
                        if (__start_reading) {
                            if (__prev_x < e.clientX && __current_tab.id > 0) {
                                var diff = e.clientX - __prev_x, prev = divs[__current_tab.id - 1];
                                _coding.default.show(prev);
                                diff *= 0.75;
                                __diff_x = -1 * diff;
                                if (diff < prev.offsetWidth / 2) {
                                    _coding.default.css(__current_tab.obj, {
                                        left: diff + "px"
                                    });
                                    var left = -1 * (prev.offsetWidth - diff);
                                    _coding.default.css(prev, {
                                        left: left + "px"
                                    });
                                //console.log(left);
                                } else {
                                    setActiveTab(__current_tab.id - 1);
                                    slider(prev, __current_tab.id - 1);
                                    __start_reading = false;
                                }
                            } else if (__prev_x > e.clientX && __current_tab.id < divs.length - 1) {
                                var diff2 = __prev_x - e.clientX, next = divs[__current_tab.id + 1];
                                _coding.default.show(next);
                                diff2 *= 0.75;
                                __diff_x = diff2;
                                if (diff2 < next.offsetWidth / 2) {
                                    _coding.default.css(__current_tab.obj, {
                                        left: -1 * diff2 + "px"
                                    });
                                    var left2 = next.offsetWidth - diff2;
                                    _coding.default.css(next, {
                                        left: left2 + "px"
                                    });
                                } else {
                                    setActiveTab(__current_tab.id + 1);
                                    slider(next, __current_tab.id + 1);
                                    __start_reading = false;
                                }
                            }
                        }
                    };
                    divs[i1].onclick = function(e) {
                        //alert(e);
                        __start_reading = false;
                        var elem = e.currentTarget;
                        if (__diff_x > 0 && __diff_x <= elem.offsetWidth / 2) {
                            (0, _animation).default({
                                type: "left",
                                object: elem,
                                value: 0,
                                time: 100
                            });
                            (0, _animation).default({
                                type: "left",
                                object: divs[i1 + 1],
                                value: elem.offsetWidth,
                                time: 100
                            });
                        } else if (__diff_x < 0 && __diff_x * -1 <= elem.offsetWidth / 2) {
                            (0, _animation).default({
                                type: "left",
                                object: elem,
                                value: 0,
                                time: 100
                            });
                            (0, _animation).default({
                                type: "left",
                                object: divs[i1 - 1],
                                value: -1 * elem.offsetWidth,
                                time: 100
                            });
                        }
                    };
                }
            }
        };
        console.log('ID Tab : ', _id_tab);
        tabs = _coding.default.get(_id_tab);
        tabsTitle = tabs.querySelectorAll(".tab-title");
        len = tabsTitle.length;
        for(var i = 0; i < len; i++){
            if (tabsTitle[i].className.indexOf("active") !== -1 && tabsTitle[i].className.indexOf("notactive") === -1) {
                var id = tabsTitle[i].querySelector("a").href.replace(/(.*)#/g, "#");
                selctor_tab.push({
                    id: id,
                    active: true
                });
            } else {
                var id1 = tabsTitle[i].querySelector("a").href.replace(/(.*)#/g, "#");
                selctor_tab.push({
                    id: id1,
                    active: false
                });
            }
            if (_options === undefined || _options.horizontal === undefined || _options.horizontal === false) _coding.default.css(tabsTitle[i], {
                width: "calc(" + 100 / len + "% - 0.0011px)"
            });
        }
        for(var i1 = 0; i1 < len; i1++)_loop(i1);
        _coding.default.css(divs[0].parentNode.parentNode, {
            overflowX: "hidden"
        });
    };
    var slider = function(_obj, _orientation) {
        var obj = _coding.default.get(_obj), obj2 = _coding.default.get(__current_tab.obj);
        //console.log("id", _orientation, __current_tab.id);
        if (_orientation > __current_tab.id) {
            _coding.default.show(obj);
            var nFonct = function(_N) {
                //console.log(obj.offsetLeft, obj2.offsetLeft, _N);
                _coding.default.css(obj, {
                    left: obj.offsetWidth + "px"
                });
                _coding.default.css(obj2, {
                    left: "0"
                });
                if (obj2.offsetLeft === 0 && obj.offsetLeft === obj.offsetWidth && obj.offsetLeft > 0 || _N >= 2) {
                    (0, _animation).default({
                        type: "left",
                        object: obj2,
                        value: -1 * obj2.offsetWidth,
                        time: __time_slide_tab,
                        prev: 0
                    }).then(function(_obj1) {
                        var fonct = function(_n) {
                            if (_obj1.offsetLeft === -1 * _obj1.offsetWidth) {
                                //console.log(_obj1.offsetLeft, _n);
                                return 0;
                            } else setTimeout(fonct, 1000, _n + 1);
                        };
                        fonct(1);
                    });
                    (0, _animation).default({
                        type: "left",
                        object: obj,
                        value: 0,
                        time: __time_slide_tab,
                        prev: obj.offsetWidth
                    });
                } else {
                    nFonct(_N + 1);
                }
            };
            nFonct(1);
        } else {
            _coding.default.show(obj);
            var nFonct1 = function(_N) {
                //console.log(obj.offsetLeft, obj2.offsetLeft, _N);
                _coding.default.css(obj, {
                    left: -1 * obj.offsetWidth + "px"
                });
                _coding.default.css(obj2, {
                    left: "0"
                });
                if (obj2.offsetLeft === 0 && obj.offsetLeft === -1 * obj.offsetWidth || _N >= 2) {
                    (0, _animation).default({
                        type: "left",
                        object: obj2,
                        value: obj2.offsetWidth,
                        time: __time_slide_tab,
                        prev: 0
                    }).then(function(_obj1) {
                        var fonct = function(_n) {
                            if (_obj1.offsetLeft === _obj1.offsetWidth) {
                                //console.log(_obj1.offsetLeft, _n);
                                return 0;
                            } else setTimeout(fonct, 1000, _n + 1);
                        };
                        fonct(1);
                    });
                    (0, _animation).default({
                        type: "left",
                        object: obj,
                        value: 0,
                        time: __time_slide_tab,
                        prev: -1 * obj.offsetWidth
                    });
                } else nFonct1(_N + 1);
            };
            nFonct1(1);
        }
        __current_tab = {
            obj: _obj,
            id: _orientation
        };
    };
    var setActiveTab = function(_id) {
        for(var k = 0; k < len; k++){
            _coding.default.removeClass(tabsTitle[k], [
                "notactive",
                "not",
                "active"
            ]);
            _coding.default.addClass(tabsTitle[k], "notactive");
            _coding.default.removeClass(divs[k], [
                "notactive",
                "not",
                "active"
            ]);
            _coding.default.addClass(divs[k], "notactive");
        }
        _coding.default.addClass(tabsTitle[_id], "active");
        _coding.default.addClass(divs[_id], "active");
    };
    try {
        worker(_selector);
        setTimeout(function() {
            for(var i = 0; i < len; i++){
                if (selctor_tab[i].active) {
                    _coding.default.get(tabsTitle[i]).click();
                    console.log('Activated : ', tabsTitle[i]);
                }
            }
        }, 200);
    } catch (e) {
        console.log(e);
    }
};
var _default = Tabs;
exports.default = _default;
