"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _coding = _interopRequireDefault(require("../../coding"));
var _utilitaires = _interopRequireDefault(require("../../utilitaires"));
var _animation = _interopRequireDefault(require("../animation"));
var _fade = _interopRequireDefault(require("../fade"));
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var Alert = /*#__PURE__*/ function() {
    "use strict";
    function Alert(_id, _handlers) {
        _classCallCheck(this, Alert);
        _defineProperty(this, "element", null);
        _defineProperty(this, "width", 200);
        _defineProperty(this, "height", 100);
        _defineProperty(this, "top", _utilitaires.default.centerTop(this.height));
        _defineProperty(this, "left", _utilitaires.default.centerLeft(this.width));
        _defineProperty(this, "opacity", 0);
        _defineProperty(this, "FACT", 50);
        _defineProperty(this, "REL", 300 / 400);
        _defineProperty(this, /**
     *
     * @type {{prompt: boolean, cancel: function(event), ok: function(string, HTMLElement?)}}
     */ "handlers", null);
        _defineProperty(this, "time", 200);
        this.element = _id;
        this.handlers = _handlers;
    }
    _createClass(Alert, [
        {
            key: "init",
            value: function init(_width, _height) {
                if (_utilitaires.default.isNumeric(_width) && _utilitaires.default.isNumeric(_height)) {
                    var initWidth = _width - this.FACT;
                    var initHeight = initWidth * this.REL;
                    this.width = _width;
                    this.height = _height;
                    this.top = _utilitaires.default.centerTop(_height);
                    this.left = _utilitaires.default.centerLeft(_width);
                    _coding.default.css(this.element, {
                        width: this.width + "px",
                        height: this.height + "px",
                        top: this.top + "px",
                        left: this.left + "px",
                        opacity: "0",
                        transform: "scale(1.5)"
                    });
                    this.opacity = 1;
                } else console.log("Warning !!! Provide numerics values");
            }
        },
        {
            key: "show",
            value: function show() {
                var _this = this;
                var fade = _coding.default.new('div');
                _coding.default.setClass(fade, "alert-fade");
                _coding.default.remove('.alert-fade');
                _coding.default.get('body').appendChild(fade);
                _fade.default.In('.alert-fade');
                _coding.default.show(this.element);
                (0, _animation).default({
                    type: "opacity",
                    object: this.element,
                    value: 1,
                    time: this.time,
                    prev: 0
                });
                (0, _animation).default({
                    type: "scale",
                    object: this.element,
                    value: 1,
                    time: this.time,
                    prev: 1.5
                });
                //setWrapped();
                if (this.handlers !== undefined && this.handlers.prompt !== undefined) _coding.default.get('#dc-alert-input').select();
                if (_coding.default.get('#dc-confirm-btn-ok') !== undefined) {
                    if (this.handlers !== undefined && this.handlers.ok !== undefined) {
                        var _this1 = this;
                        _coding.default.event({
                            name: "click",
                            object: "#dc-confirm-btn-ok",
                            callback: function(evt) {
                                if (_this1.handlers.prompt === undefined) _this1.handlers.ok(evt);
                                else _this1.handlers.ok(_coding.default.val('#dc-alert-input'), evt);
                            }
                        });
                    }
                }
                if (_coding.default.get('#dc-confirm-btn-cancel') !== undefined) {
                    if (this.handlers !== undefined && this.handlers.cancel !== undefined) {
                        var _this2 = this;
                        _coding.default.event({
                            name: "click",
                            object: "#dc-confirm-btn-cancel",
                            callback: function(evt) {
                                _this2.handlers.cancel(evt);
                            }
                        });
                    }
                }
                _coding.default.event({
                    name: "click",
                    object: ".dc-alert-close",
                    callback: function() {
                        _this.close();
                    }
                });
            }
        },
        {
            key: "reinit",
            value: function reinit() {
                this.width = this.width - this.FACT;
                this.height = this.width * this.REL;
                this.top = _utilitaires.default.centerTop(this.height);
                this.left = _utilitaires.default.centerLeft(this.width);
                this.opacity = 0;
            }
        },
        {
            key: "close",
            value: function close() {
                var _this = this;
                this.reinit();
                (0, _animation).default({
                    type: "opacity",
                    object: this.element,
                    value: 0,
                    time: this.time * 0.75,
                    prev: 1
                });
                (0, _animation).default({
                    type: "scale",
                    object: this.element,
                    value: 1.5,
                    time: this.time * 0.75,
                    prev: 1
                });
                setTimeout(function() {
                    _coding.default.hide(_this.element);
                }, 300);
                _fade.default.out('.alert-fade');
            }
        }
    ]);
    return Alert;
}();
var setWrapped = function() {
    // set wrapped class to btn
    var dc_btn_pop = _coding.default.get('.footer-popup .dc-btn');
    if (typeof dc_btn_pop != "undefined") {
        if (typeof dc_btn_pop.length === "undefined") _coding.default.addClass(dc_btn_pop, 'dc-item-wrapp span-blue');
        else {
            for(var i = 0; i < dc_btn_pop.length; i++){
                _coding.default.addClass(dc_btn_pop[i], 'dc-item-wrapp span-blue');
            }
        }
    }
    dc_btn_pop = _coding.default.get('.footer-popup .btn');
    if (typeof dc_btn_pop != "undefined") {
        if (typeof dc_btn_pop.length === "undefined") _coding.default.addClass(dc_btn_pop, 'dc-item-wrapp span-blue');
        else {
            for(var i1 = 0; i1 < dc_btn_pop.length; i1++){
                _coding.default.addClass(dc_btn_pop[i1], 'dc-item-wrapp span-blue');
            }
        }
    }
    dc_btn_pop = _coding.default.get('.btn-icon');
    if (typeof dc_btn_pop != "undefined") {
        if (typeof dc_btn_pop.length === "undefined") _coding.default.addClass(dc_btn_pop, 'dc-wrapp');
        else {
            for(var i2 = 0; i2 < dc_btn_pop.length; i2++){
                _coding.default.addClass(dc_btn_pop[i2], 'dc-wrapp');
            }
        }
    }
    _coding.default.event({
        name: "click",
        object: ".dc-wrapp",
        callback: function callback(evt) {
            var btn = evt.currentTarget;
            var tbtn = btn, spans = tbtn.querySelectorAll('span.span-wrapp');
            if (spans != null && typeof spans.length !== "undefined") {
                for(var i = 0; i < spans.length; i++)spans[i].parentNode.removeChild(spans[i]);
            }
            var x = evt.pageX - _coding.default.getCoords(btn).x, y = evt.pageY - _coding.default.getCoords(btn).y;
            var spanElem = _coding.default.new("span");
            _coding.default.css(spanElem, {
                width: btn.offsetWidth / 2 + "px",
                height: btn.offsetHeight / 2 + "px",
                left: btn.offsetWidth / 4 + "px",
                top: btn.offsetHeight / 4 + "px"
            });
            _coding.default.setClass(spanElem, 'span-wrapp');
            btn.appendChild(spanElem);
            setTimeout(function() {
                var span = tbtn.querySelector('span.span-wrapp');
                if (span != null && typeof span.parentNode !== "undefined") span.parentNode.removeChild(span);
            }, 1100);
        }
    });
    _coding.default.event({
        name: "click",
        object: ".dc-item-wrapp",
        callback: function callback(evt) {
            var btn = evt.currentTarget;
            var tbtn = btn, spans = tbtn.querySelectorAll('span.span-wrapp');
            if (spans != null && typeof spans.length !== "undefined") {
                for(var i = 0; i < spans.length; i++)spans[i].parentNode.removeChild(spans[i]);
            }
            var x = evt.pageX - _coding.default.getCoords(btn).x, y = evt.pageY - _coding.default.getCoords(btn).y, obj_x = _coding.default.getCoords(btn).x === 0 ? x - _coding.default.getCoords(btn).x : x;
            var spanElem = _coding.default.new("span");
            _coding.default.css(spanElem, {
                width: btn.offsetHeight + "px",
                height: btn.offsetHeight + "px",
                left: obj_x + "px",
                top: "0"
            });
            _coding.default.setClass(spanElem, 'span-wrapp');
            btn.appendChild(spanElem);
            setTimeout(function() {
                var span = tbtn.querySelector('span.span-wrapp');
                if (span != null && typeof span.parentNode !== "undefined") span.parentNode.removeChild(span);
            }, 1100);
        }
    });
};
var _default = Alert;
exports.default = _default;
