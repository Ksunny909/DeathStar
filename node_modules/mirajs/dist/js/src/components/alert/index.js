"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _coding = _interopRequireDefault(require("../../coding"));
var _alert = _interopRequireDefault(require("./alert"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/**
 * @param _obj {{type: string, title: string, content: string, ok: string, ?cancel: function, style?: string, time: string|number, password?: boolean, input?: {default: string, placeholder: string}, btn?: string}}
 * @returns: object
 */ var DcAlert = function(_obj) {
    /**
     * {title: string, content: string, btn: string}
     * or {type: ["confirm", "alert", "prompt"], title: string, content: string, ok: {name: string, handler: function}}
     */ var matches = function() {
        return _obj !== null && _obj.title !== undefined && _obj.content !== undefined;
    }, ret = null;
    try {
        if (matches()) {
            var footer = ".dcx-alert__footer", pop, handlers = {}, content = ".dcx-alert__content", alert_input = '#dc-alert-input';
            _coding.default.get("#dc-alert-js-title").innerHTML = _obj.title;
            _coding.default.get("#dc-alert-js-content").innerHTML = _obj.content;
            if (_obj.style !== undefined) {
                if (_obj.style === "mac") {
                    _coding.default.removeClass(".dcx-alert", "dc-mac");
                    _coding.default.addClass(".dcx-alert", "dc-mac");
                } else _coding.default.removeClass(".dcx-alert", "dc-mac");
            }
            if (_obj.type !== undefined) {
                switch(_obj.type){
                    case "confirm":
                        _coding.default.removeClass(footer, "dc-alert-ok");
                        _coding.default.setContent(footer, "");
                        if (_obj.ok !== undefined) {
                            var okBtn = _coding.default.new('button');
                            okBtn.id = "dc-confirm-btn-ok";
                            _coding.default.setClass(okBtn, "dc-alert-close dc-item-wrapp span-blue");
                            if (_obj.ok.name !== undefined) _coding.default.setContent(okBtn, _obj.ok.name);
                            else _coding.default.setContent(okBtn, "ok");
                            _coding.default.get(footer).appendChild(okBtn);
                            if (_obj.ok.handler !== undefined) handlers.ok = _obj.ok.handler;
                            else console.log("dc-alert: No handler provided for ok !");
                        }
                        if (_obj.cancel !== undefined) {
                            var cancelBtn = _coding.default.new('button');
                            cancelBtn.id = "dc-confirm-btn-cancel";
                            _coding.default.setClass(cancelBtn, "dc-alert-close dc-item-wrapp span-blue");
                            if (_obj.cancel.name !== undefined) _coding.default.setContent(cancelBtn, _obj.cancel.name);
                            else _coding.default.setContent(cancelBtn, "cancel");
                            if (_obj.cancel.handler !== undefined) handlers.cancel = _obj.cancel.handler;
                            else console.log("dc-alert: No handler provided for cancel !");
                            _coding.default.get(footer).appendChild(cancelBtn);
                        }
                        pop = new _alert.default("#dc-alert-js", handlers);
                        break;
                    case "prompt":
                        _coding.default.removeClass(footer, "dc-alert-ok");
                        _coding.default.setContent(footer, "");
                        var input = _coding.default.new('input');
                        _coding.default.setClass(input, "dc-input");
                        input.id = "dc-alert-input";
                        if (_obj.password !== undefined && _obj.password) input.type = "password";
                        else input.type = "text";
                        if (_obj.input !== undefined) {
                            if (_obj.input.default !== undefined) {
                                input.setAttribute("value", _obj.input.default);
                                input.select();
                            }
                            if (_obj.input.placeholder !== undefined) input.placeholder = _obj.input.placeholder;
                        }
                        ret = alert_input;
                        _coding.default.get(content).appendChild(input);
                        // cancel btn
                        if (_obj.cancel !== undefined) {
                            var cancelBtn1 = _coding.default.new('button');
                            cancelBtn1.id = "dc-confirm-btn-cancel";
                            _coding.default.setClass(cancelBtn1, "dc-alert-close dc-item-wrapp span-blue");
                            if (_obj.cancel.name !== undefined) _coding.default.setContent(cancelBtn1, _obj.cancel.name);
                            else _coding.default.setContent(cancelBtn1, "cancel");
                            if (_obj.cancel.handler !== undefined) handlers.cancel = _obj.cancel.handler;
                            else console.log("dc-alert: No handler provided for cancel !");
                            _coding.default.get(footer).appendChild(cancelBtn1);
                        }
                        // ok btn
                        if (_obj.ok !== undefined) {
                            var okBtn1 = _coding.default.new('button');
                            okBtn1.id = "dc-confirm-btn-ok";
                            _coding.default.setClass(okBtn1, "dc-alert-close dc-item-wrapp span-blue");
                            if (_obj.ok.name !== undefined) _coding.default.setContent(okBtn1, _obj.ok.name);
                            else _coding.default.setContent(okBtn1, "ok");
                            _coding.default.get(footer).appendChild(okBtn1);
                            if (_obj.ok.handler !== undefined) handlers.ok = _obj.ok.handler;
                            else console.log("dc-alert: No handler provided for ok !");
                        }
                        handlers.prompt = true;
                        pop = new _alert.default("#dc-alert-js", handlers);
                        break;
                    case "alert":
                        _coding.default.setContent(footer, "");
                        _coding.default.addClass(footer, "dc-alert-ok");
                        var btnOk = _coding.default.new("button");
                        _coding.default.setClass(btnOk, "dc-alert-close dc-item-wrapp span-blue");
                        _coding.default.setContent(btnOk, _obj.btn);
                        _coding.default.get(footer).appendChild(btnOk);
                        pop = new _alert.default("#dc-alert-js");
                        break;
                }
            } else {
                _coding.default.setContent(footer, "");
                _coding.default.addClass(footer, "dc-alert-ok");
                var btnOk1 = _coding.default.new("button");
                _coding.default.setClass(btnOk1, "dc-alert-close dc-item-wrapp span-blue");
                _coding.default.setContent(btnOk1, _obj.btn);
                _coding.default.get(footer).appendChild(btnOk1);
                pop = new _alert.default("#dc-alert-js");
            }
            if (window.innerWidth <= 600) pop.init(300, 200);
            else pop.init(400, 250);
            if (_obj.time !== undefined) pop.time = parseInt(_obj.time);
            pop.show();
        } else console.log("dc-alert: Object param not match !!! ");
    } catch (e) {
        console.log(e);
    }
    return ret;
};
var _default = DcAlert;
exports.default = _default;
