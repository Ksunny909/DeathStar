"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _ = require("../..");
var _coding = _interopRequireDefault(require("../coding"));
var _tooltip = _interopRequireDefault(require("./tooltip"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/**
 * @param _obj {{img: string, title: string, nb: number, href: string, descript: string, handler: function, iconName: string}}
 * @returns {HTMLElement}
 */ var Notify = function(_obj) {
    var parent = _coding.default.get('#dc-notify'), elem = document.createElement('div'), a = document.createElement('div'), controller = _coding.default.gets('#dc-notify-controller');
    // define controller object
    if (controller.length > 0) controller = controller[0];
    else controller = null;
    var avatar = "", title = "", descript = "", href = "javascript:;", meta = "";
    if (typeof _obj.img == "string") avatar = '<span class="dcx-item__avatar"><img alt="avatar" src="' + _obj.img + '"/></span>';
    else if (_obj.iconName !== undefined) avatar = '<span class="dcx-item__avatar"><i class="' + _obj.iconName + '"></i></span>';
    if (typeof _obj.descript == "string") descript = '<span class="dcx-item__descript">' + _obj.descript + '</span>';
    if (typeof _obj.title == "string") title = '<span class="dcx-item__title">' + _obj.title + ' ' + descript + '</span>';
    if (typeof _obj.href == "string") href = _obj.href;
    if (typeof _obj.nb != "undefined") meta = '<span class="dcx-item__meta">' + _obj.nb + '</span>';
    a.addEventListener("click", function() {
        window.location.href = href;
        if (_obj.handler !== undefined) _obj.handler();
    }, false);
    elem.appendChild(a);
    a.outerHTML = '<div class="dcx-item dcx-clickable">' + avatar + title + meta + '</div><div class="dcx-divider"></div>';
    _coding.default.append(elem, '<button id="dc-notify-remove" class="dcx-btn__icon small"><i class="DGfi-clearclose"></i></button>');
    parent.insertBefore(elem, parent.firstChild);
    _coding.default.show('#dc-notify');
    elem.className = "dcomponent";
    // animating
    var tabs = parent.querySelectorAll(".dcx-item");
    if (tabs.length <= 1) {
        (0, _).DCAnimate({
            type: "right",
            object: parent,
            value: 40,
            time: 300,
            prev: -100
        });
    } else {
        (0, _).DCAnimate({
            type: "right",
            object: elem,
            value: 0,
            time: 500,
            prev: -200
        });
    }
    var dcnr = elem.querySelector('#dc-notify-remove');
    dcnr.onclick = function Notify() {
        var tab = parent.querySelectorAll(".dcx-item");
        if (tab.length <= 1) {
            (0, _).DCAnimate({
                type: "right",
                object: parent,
                value: -100,
                time: 300,
                prev: 40
            });
            setTimeout(function() {
                _coding.default.hide('#dc-notify');
                (0, _).DCAnimate({
                    type: "top",
                    object: controller,
                    value: -100,
                    time: 250,
                    prev: 15
                });
            }, 250);
        } else {
            (0, _).DCAnimate({
                type: "right",
                object: elem,
                value: -300,
                time: 250,
                prev: 0
            });
        }
        setTimeout(function() {
            _coding.default.remove(elem);
            if (controller !== null) controller.querySelector("#dc-notify-controller__badge").innerHTML = "" + tab.length - 1;
            _coding.default.css(parent, {
                minHeight: "unset"
            });
        }, 300);
    };
    // controller
    if (controller !== null) {
        _coding.default.show(controller);
        (0, _tooltip).default("#dc-notify-controller__tooltip", {
            title: "Hide notifications",
            position: "default"
        });
        (0, _).DCAnimate({
            type: "top",
            object: controller,
            value: 15,
            time: 300,
            prev: -100
        });
        var tab1 = parent.querySelectorAll(".dcx-item");
        controller.querySelector("#dc-notify-controller__badge").innerHTML = "" + tab1.length;
        controller.querySelector(".dcx-fab").onclick = function() {
            _coding.default.slideToggle(parent, 300);
        };
    }
    return elem;
};
var _default = Notify;
exports.default = _default;
